{"version":3,"sources":["js/timer.js","index.js"],"names":["CountdownTimer","constructor","selector","targetDate","document","querySelector","spanDays","spanhHours","spanMins","spanSecs","timer","intervalId","setInterval","deltaTime","Date","now","currentTime","getTimeComponents","clearInterval","innerHTML","updateClockface","time","days","pad","Math","floor","hours","mins","secs","value","String","padStart","textContent","Timer"],"mappings":";AAAA,MAAMA,EACJC,aAAY,SAAEC,EAAF,WAAYC,IACjBD,KAAAA,SAAWE,SAASC,cAAcH,GAClCC,KAAAA,WAAaA,EACbG,KAAAA,SAAW,KAAKJ,SAASG,cAAc,2BACvCE,KAAAA,WAAa,KAAKL,SAASG,cAAc,4BACzCG,KAAAA,SAAW,KAAKN,SAASG,cAAc,2BACvCI,KAAAA,SAAW,KAAKP,SAASG,cAAc,2BAEvCK,KAAAA,QAEPA,QACQC,MAAAA,EAAaC,YAAY,KACvBC,MAAAA,EAAY,KAAKV,WAAaW,KAAKC,MACnCC,EAAc,KAAKC,kBAAkBJ,GAEvCA,EAAY,IACdK,cAAcP,GACTT,KAAAA,SAASiB,UAAY,gBAGvBC,KAAAA,gBAAgBJ,IACpB,KAGLC,kBAAkBI,GAMT,MAAA,CAAEC,KALI,KAAKC,IAAIC,KAAKC,MAAMJ,EAAQ,QAK1BK,MAJD,KAAKH,IAAIC,KAAKC,MAAOJ,EAAQ,MAAyB,OAI9CM,KAHT,KAAKJ,IAAIC,KAAKC,MAAOJ,EAAQ,KAAoB,MAGlCO,KAFf,KAAKL,IAAIC,KAAKC,MAAOJ,EAAQ,IAAc,OAK1DE,IAAIM,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGnCX,iBAAgB,KAAEE,EAAF,MAAQI,EAAR,KAAeC,EAAf,KAAqBC,IAC9BtB,KAAAA,SAAS0B,eAAiBV,IAC1Bf,KAAAA,WAAWyB,eAAiBN,IAC5BlB,KAAAA,SAASwB,eAAiBL,IAC1BlB,KAAAA,SAASuB,eAAiBJ,KAInC,MAAMK,EAAQ,IAAIjC,EAAe,CAC/BE,SAAU,WACVC,WAAY,IAAIW,KAAK;;AChDvB,aAAA,QAAA","file":"src.4f566b75.js","sourceRoot":"..\\src","sourcesContent":["class CountdownTimer {\r\n  constructor({ selector, targetDate }) {\r\n    this.selector = document.querySelector(selector);\r\n    this.targetDate = targetDate;\r\n    this.spanDays = this.selector.querySelector('span[data-value=\"days\"]');\r\n    this.spanhHours = this.selector.querySelector('span[data-value=\"hours\"]');\r\n    this.spanMins = this.selector.querySelector('span[data-value=\"mins\"]');\r\n    this.spanSecs = this.selector.querySelector('span[data-value=\"secs\"]');\r\n\r\n    this.timer();\r\n  }\r\n  timer() {\r\n    const intervalId = setInterval(() => {\r\n      const deltaTime = this.targetDate - Date.now();\r\n      const currentTime = this.getTimeComponents(deltaTime);\r\n\r\n      if (deltaTime < 0) {\r\n        clearInterval(intervalId);\r\n        this.selector.innerHTML = 'Время вышло!';\r\n      }\r\n\r\n      this.updateClockface(currentTime);\r\n    }, 1000);\r\n  }\r\n\r\n  getTimeComponents(time) {\r\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\r\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n    return { days, hours, mins, secs };\r\n  }\r\n\r\n  pad(value) {\r\n    return String(value).padStart(2, '0');\r\n  }\r\n\r\n  updateClockface({ days, hours, mins, secs }) {\r\n    this.spanDays.textContent = `${days}`;\r\n    this.spanhHours.textContent = `${hours}`;\r\n    this.spanMins.textContent = `${mins}`;\r\n    this.spanSecs.textContent = `${secs}`;\r\n  }\r\n}\r\n\r\nconst Timer = new CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('May 25, 2021'),\r\n});\r\n","import './js/timer';\r\n"]}